{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Testing Swagger APIs.",
        "title": "SalesService APIs",
        "termsOfService": "http://swagger.io/terms/// @contact.name API Support",
        "contact": {
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "version": "1.0"
    },
    "paths": {
        "/api/customer/": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a Customer for an org.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "summary": "Create a Customer",
                "parameters": [
                    {
                        "description": "Customer Data",
                        "name": "customer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateCustomerParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Customer"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "db.Customer": {
            "type": "object",
            "properties": {
                "customer_address": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "customer_city": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "customer_country": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "customer_id": {
                    "type": "string"
                },
                "customer_name": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "customer_state": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "customer_status": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "customer_total_value": {
                    "$ref": "#/definitions/sql.NullInt64"
                },
                "tenant_id": {
                    "type": "string"
                }
            }
        },
        "models.CreateCustomerParams": {
            "type": "object",
            "properties": {
                "customer_address": {
                    "type": "string"
                },
                "customer_city": {
                    "type": "string"
                },
                "customer_country": {
                    "type": "string"
                },
                "customer_name": {
                    "type": "string"
                },
                "customer_state": {
                    "type": "string"
                },
                "customer_status": {
                    "type": "string"
                },
                "customer_total_value": {
                    "type": "integer"
                }
            }
        },
        "sql.NullInt64": {
            "type": "object",
            "properties": {
                "int64": {
                    "type": "integer"
                },
                "valid": {
                    "description": "Valid is true if Int64 is not NULL",
                    "type": "boolean"
                }
            }
        },
        "sql.NullString": {
            "type": "object",
            "properties": {
                "string": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if String is not NULL",
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}