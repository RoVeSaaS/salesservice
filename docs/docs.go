// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "RoVe SaaS Support",
            "email": "rovesaas@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/customer/": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get All Customers for Tenant.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "summary": "Get All Customers for Tenant",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Customer"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a Customer for an org.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "summary": "Create a Customer",
                "parameters": [
                    {
                        "description": "Customer Data",
                        "name": "customer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateCustomerParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Customer"
                        }
                    }
                }
            }
        },
        "/api/customer/{customerid}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a Customer by ID for Tenant.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "summary": "Get a Customer by ID for Tenant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Customer"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a Customer by ID for Tenant.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "summary": "Delete a Customer by ID for Tenant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "definitions": {
        "db.Customer": {
            "type": "object",
            "properties": {
                "customer_address": {
                    "type": "string"
                },
                "customer_app_size": {
                    "type": "string"
                },
                "customer_app_type": {
                    "type": "string"
                },
                "customer_city": {
                    "type": "string"
                },
                "customer_country": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "customer_name": {
                    "type": "string"
                },
                "customer_primary_email": {
                    "type": "string"
                },
                "customer_primary_phone": {
                    "type": "string"
                },
                "customer_reference": {
                    "type": "string"
                },
                "customer_secondary_email": {
                    "type": "string"
                },
                "customer_secondary_phone": {
                    "type": "string"
                },
                "customer_state": {
                    "type": "string"
                },
                "customer_status": {
                    "type": "string"
                },
                "customer_total_value": {
                    "type": "integer"
                },
                "customer_uuid": {
                    "type": "string"
                },
                "tenant_id": {
                    "type": "string"
                }
            }
        },
        "models.CreateCustomerParams": {
            "type": "object",
            "properties": {
                "customer_address": {
                    "type": "string"
                },
                "customer_app_size": {
                    "type": "string"
                },
                "customer_app_type": {
                    "type": "string"
                },
                "customer_city": {
                    "type": "string"
                },
                "customer_country": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "customer_name": {
                    "type": "string"
                },
                "customer_primary_email": {
                    "type": "string"
                },
                "customer_primary_phone": {
                    "type": "string"
                },
                "customer_reference": {
                    "type": "string"
                },
                "customer_secondary_email": {
                    "type": "string"
                },
                "customer_secondary_phone": {
                    "type": "string"
                },
                "customer_state": {
                    "type": "string"
                },
                "customer_status": {
                    "type": "string"
                },
                "customer_total_value": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{"http", "https"},
	Title:            "SalesService APIs",
	Description:      "Sales Service APIs.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
