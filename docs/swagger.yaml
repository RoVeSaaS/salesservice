definitions:
  db.Customer:
    properties:
      customer_address:
        $ref: '#/definitions/sql.NullString'
      customer_city:
        $ref: '#/definitions/sql.NullString'
      customer_country:
        $ref: '#/definitions/sql.NullString'
      customer_id:
        type: string
      customer_name:
        $ref: '#/definitions/sql.NullString'
      customer_state:
        $ref: '#/definitions/sql.NullString'
      customer_status:
        $ref: '#/definitions/sql.NullString'
      customer_total_value:
        $ref: '#/definitions/sql.NullInt64'
      tenant_id:
        type: string
    type: object
  models.CreateCustomerParams:
    properties:
      customer_address:
        type: string
      customer_city:
        type: string
      customer_country:
        type: string
      customer_name:
        type: string
      customer_state:
        type: string
      customer_status:
        type: string
      customer_total_value:
        type: integer
    type: object
  sql.NullInt64:
    properties:
      int64:
        type: integer
      valid:
        description: Valid is true if Int64 is not NULL
        type: boolean
    type: object
  sql.NullString:
    properties:
      string:
        type: string
      valid:
        description: Valid is true if String is not NULL
        type: boolean
    type: object
info:
  contact:
    email: support@swagger.io
    url: http://www.swagger.io/support
  description: Testing Swagger APIs.
  termsOfService: http://swagger.io/terms/// @contact.name API Support
  title: SalesService APIs
  version: "1.0"
paths:
  /api/customer/:
    post:
      consumes:
      - application/json
      description: Create a Customer for an org.
      parameters:
      - description: Customer Data
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/models.CreateCustomerParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Customer'
      security:
      - Bearer: []
      summary: Create a Customer
      tags:
      - Customer
schemes:
- http
- https
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
