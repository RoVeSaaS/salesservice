definitions:
  db.Customer:
    properties:
      customer_address:
        type: string
      customer_app_size:
        type: string
      customer_app_type:
        type: string
      customer_city:
        type: string
      customer_country:
        type: string
      customer_id:
        type: string
      customer_name:
        type: string
      customer_primary_email:
        type: string
      customer_primary_phone:
        type: string
      customer_reference:
        type: string
      customer_secondary_email:
        type: string
      customer_secondary_phone:
        type: string
      customer_state:
        type: string
      customer_status:
        type: string
      customer_total_value:
        type: integer
      customer_uuid:
        type: string
      tenant_id:
        type: string
    type: object
  models.CreateCustomerParams:
    properties:
      customer_address:
        type: string
      customer_app_size:
        type: string
      customer_app_type:
        type: string
      customer_city:
        type: string
      customer_country:
        type: string
      customer_id:
        type: string
      customer_name:
        type: string
      customer_primary_email:
        type: string
      customer_primary_phone:
        type: string
      customer_reference:
        type: string
      customer_secondary_email:
        type: string
      customer_secondary_phone:
        type: string
      customer_state:
        type: string
      customer_status:
        type: string
      customer_total_value:
        type: integer
    type: object
info:
  contact:
    email: rovesaas@gmail.com
    name: RoVe SaaS Support
  description: Sales Service APIs.
  title: SalesService APIs
  version: "1.0"
paths:
  /api/customer/:
    get:
      consumes:
      - application/json
      description: Get All Customers for Tenant.
      parameters:
      - default: 1
        description: Page
        in: query
        name: page
        type: integer
      - default: 10
        description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Customer'
      security:
      - Bearer: []
      summary: Get All Customers for Tenant
      tags:
      - Customer
    post:
      consumes:
      - application/json
      description: Create a Customer for an org.
      parameters:
      - description: Customer Data
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/models.CreateCustomerParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Customer'
      security:
      - Bearer: []
      summary: Create a Customer
      tags:
      - Customer
  /api/customer/{customerid}:
    delete:
      consumes:
      - application/json
      description: Delete a Customer by ID for Tenant.
      parameters:
      - description: Customer ID
        in: path
        name: customerid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - Bearer: []
      summary: Delete a Customer by ID for Tenant
      tags:
      - Customer
    get:
      consumes:
      - application/json
      description: Get a Customer by ID for Tenant.
      parameters:
      - description: Customer ID
        in: path
        name: customerid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Customer'
      security:
      - Bearer: []
      summary: Get a Customer by ID for Tenant
      tags:
      - Customer
schemes:
- http
- https
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
